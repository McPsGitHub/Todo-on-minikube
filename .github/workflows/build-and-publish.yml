# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Build and Publish a Docker image

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

on:
  push:
    branches: ['main']

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install kubectl
        uses: azure/setup-kubectl@v4.0.0
        with:
          version: 'latest' # default is latest stable
        id: install
  
      - name: Log in to the Container registry
        uses: docker/login-action@v3.3.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5.5.1
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=latest,enable={{is_default_branch}}
          flavor: |
            latest=true
      
      - name: Build, tag, and push docker image
        uses: docker/build-push-action@v6.7.0     
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }} 
#        env:
#          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
#          REPOSITORY: Todo-on-minikube
#          IMAGE_TAG: latest
#        run: |
#          docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
#          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG       

#     - name: Update kube config
#       run: aws eks update-kubeconfig --name Wiz-EKS-Cluster
  
      - name: Pull Docker image
        run: docker pull ${env.REGISTRY}/${env.IMAGE_NAME}:$IMAGE_TAG

      - name: Run Docker container
        run: docker run ${ env.REGISTRY }/${ env.IMAGE_NAME }:$IMAGE_TAG

      - name: Update MongoDB config and deploy MongoDB   
        run: |
          kubectl apply -f mongodb-secret.yaml
          kubectl apply -f mongodb-config.yaml          
          kubectl apply -f mongodb.yaml

      - name: Deploy webapp
        run: |
          kubectl apply -f webapp.yaml